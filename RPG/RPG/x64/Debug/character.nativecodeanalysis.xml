<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Character::level' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Character::{ctor}</FUNCTION>
    <DECORATED>??0Character@@QEAA@HHDHHH_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVPlace@@PEAV?$vector@PEAVCharacter@@V?$allocator@PEAVCharacter@@@std@@@2@@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::{ctor}</FUNCTION>
    <DECORATED>??0Character@@QEAA@HHDHHH_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVPlace@@PEAV?$vector@PEAVCharacter@@V?$allocator@PEAVCharacter@@@std@@@2@@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::{ctor}</FUNCTION>
    <DECORATED>??0Character@@QEAA@HHDHHH_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVPlace@@PEAV?$vector@PEAVCharacter@@V?$allocator@PEAVCharacter@@@std@@@2@@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::{ctor}</FUNCTION>
    <DECORATED>??0Character@@QEAA@HHDHHH_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVPlace@@PEAV?$vector@PEAVCharacter@@V?$allocator@PEAVCharacter@@@std@@@2@@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::{ctor}</FUNCTION>
    <DECORATED>??0Character@@QEAA@HHDHHH_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVPlace@@PEAV?$vector@PEAVCharacter@@V?$allocator@PEAVCharacter@@@std@@@2@@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::take_dmg</FUNCTION>
    <DECORATED>?take_dmg@Character@@QEAAXHPEAVPlace@@@Z</DECORATED>
    <FUNCLINE>111</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::take_dmg</FUNCTION>
    <DECORATED>?take_dmg@Character@@QEAAXHPEAVPlace@@@Z</DECORATED>
    <FUNCLINE>111</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>119</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::take_dmg</FUNCTION>
    <DECORATED>?take_dmg@Character@@QEAAXHPEAVPlace@@@Z</DECORATED>
    <FUNCLINE>111</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\mich1111\source\repos\rpg\rpg</FILEPATH>
      <FILENAME>character.cpp</FILENAME>
      <LINE>119</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Character::take_dmg</FUNCTION>
    <DECORATED>?take_dmg@Character@@QEAAXHPEAVPlace@@@Z</DECORATED>
    <FUNCLINE>111</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>